{"version":3,"sources":["hooks/users.js"],"names":["users","before","create","hook","next","data","user","password","crypto","createHash","config","type","update","salt","digest"],"mappings":";;AAAA;;;;AACA;;AACA;;;;;;AAEA;AACAA,eAAMC,MAAN,CAAa;AACZC,SAAQ,gBAAUC,IAAV,EAAgBC,IAAhB,EAAsB;AAC7BD,OAAKE,IAAL,CAAUC,IAAV,CAAeC,QAAf,GAA0BC,iBAAOC,UAAP,CAAkBC,iBAAOH,QAAP,CAAgBI,IAAlC,EAAwCC,MAAxC,CAA+CT,KAAKE,IAAL,CAAUC,IAAV,CAAeC,QAAf,GAA0BG,iBAAOH,QAAP,CAAgBM,IAAzF,EAA+FC,MAA/F,CAAsGJ,iBAAOH,QAAP,CAAgBO,MAAtH,CAA1B;AACAV;AACA;AAJW,CAAb","file":"users.js","sourcesContent":["import config from './config';\nimport {users} from './service';\nimport crypto from 'crypto';\n\n// Before to creating user, hash his password\nusers.before({\n\tcreate: function (hook, next) {\n\t\thook.data.user.password = crypto.createHash(config.password.type).update(hook.data.user.password + config.password.salt).digest(config.password.digest);\n\t\tnext();\n\t}\n});\n"],"sourceRoot":"/opt/atlassian/pipelines/agent/build/src"}