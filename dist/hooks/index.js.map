{"version":3,"sources":["hooks/index.js"],"names":["app","service","hooks","before","create","hook","serialNumber","params","sn","debug","Wistiki","cache","findById","wistikiModel","compareMsnCipher","data","msn_cipher","transformSerialNumber","serial_number","update","id","WistikiHasOwner","getUserPairing","email","wistikiHasOwner","WistikiHasFriend","wistikiHasFriend","verifiedSerialNumber","after","result","verifySerialNumber","getOriginalSerialNumber","parseInt","owner","wistiki_has_owner","wistiki_serial_number","_","each","friends","friend","wistiki_has_friend","find","map","userEmail","user","remove","wistikis","all","wistiki","require","baseSerialNumber","substr","model","baseCheckSum","newSerialNumber","cs","Verhoeff","generate"],"mappings":"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","file":"index.js","sourcesContent":["/* eslint-disable no-param-reassign */\nimport _ from 'lodash';\nimport Verhoeff from '../lib/verhoeff';\nimport { WistikiHasFriend, WistikiHasOwner, Wistiki } from '../db';\n\nconst debug = require('debug')('darwin:hooks:index');\n\nconst transformSerialNumber = (sn) => {\n  const serialNumber = `${sn}`;\n  const baseSerialNumber = serialNumber.substr(0, 11);\n  const model = parseInt(serialNumber.substr(0, 1), 10);\n  if (model !== 3) {\n    return parseInt(serialNumber, 10);\n  }\n  const baseCheckSum = parseInt(serialNumber.substr(11, 1), 10);\n  debug('baseSerialNumber', baseSerialNumber);\n  debug('baseCheckSum', baseCheckSum);\n  const newSerialNumber = `${baseSerialNumber}${(baseCheckSum + 1) % 10}`;\n  debug('new SerialNumber', newSerialNumber);\n  return parseInt(newSerialNumber, 10);\n};\n\nconst getOriginalSerialNumber = (sn) => {\n  const serialNumber = `${sn}`;\n  const baseSerialNumber = serialNumber.substr(0, 11);\n  const cs = Verhoeff.generate(baseSerialNumber);\n  return parseInt(`${baseSerialNumber}${cs}`, 10);\n};\n\nconst verifySerialNumber = (sn) => {\n  const serialNumber = `${sn}`;\n  const baseSerialNumber = serialNumber.substr(0, 11);\n  const baseCheckSum = parseInt(serialNumber.substr(11, 1), 10);\n  return baseCheckSum === Verhoeff.generate(baseSerialNumber);\n};\n\nexport default function () {\n  return function () {\n    const app = this;\n    app.service('/wistikis/:sn/recovery').hooks({\n      before: {\n        async create(hook) {\n          const serialNumber = hook.params.sn;\n          debug(serialNumber);\n          const wistikiModel = await Wistiki.cache().findById(serialNumber);\n          if (wistikiModel && !(wistikiModel.compareMsnCipher(hook.data.msn_cipher))) {\n            hook.params.sn = transformSerialNumber(serialNumber);\n          }\n          debug(hook.data);\n          debug(hook.params);\n        },\n      },\n    });\n\n    app.service('/users/:email/wistikis').hooks({\n      before: {\n        async create(hook) {\n          debug('before create serial number', hook.data.serial_number);\n          const wistikiModel = await Wistiki.cache().findById(hook.data.serial_number);\n          const serialNumber = `${hook.data.serial_number}`;\n          if (wistikiModel && !(wistikiModel.compareMsnCipher(hook.data.msn_cipher))) {\n            hook.data.serial_number = transformSerialNumber(serialNumber);\n          }\n          debug('before create new serial number', hook.data.serial_number);\n        },\n        async update(hook) {\n          debug(hook.id);\n          const serialNumber = `${hook.id}`;\n          const wistikiHasOwner = await WistikiHasOwner.getUserPairing(hook.params.email, serialNumber);\n          const wistikiHasFriend = await WistikiHasFriend.getUserPairing(hook.params.email, serialNumber);\n          hook.params.verifiedSerialNumber = serialNumber;\n          if (!wistikiHasOwner && !wistikiHasFriend) {\n            hook.params.verifiedSerialNumber = transformSerialNumber(serialNumber);\n          }\n          debug(hook.params.verifiedSerialNumber);\n        },\n      },\n      after: {\n        create(hook) {\n          debug('after create', hook.result);\n          const serialNumber = `${hook.result.serial_number}`;\n          if (!verifySerialNumber(serialNumber)) {\n            hook.result.serial_number = getOriginalSerialNumber(serialNumber);\n          }\n          debug('after create', hook.result);\n        },\n        update(hook) {\n          debug('after update', hook.result);\n          let serialNumber = `${hook.result.serial_number}`;\n          if (!verifySerialNumber(serialNumber)) {\n            serialNumber = getOriginalSerialNumber(serialNumber);\n          }\n          hook.result.serial_number = parseInt(serialNumber, 10);\n          hook.result.owner.wistiki_has_owner.wistiki_serial_number = parseInt(serialNumber, 10);\n          _.each(hook.result.friends, (friend) => {\n            friend.wistiki_has_friend.wistiki_serial_number = parseInt(serialNumber, 10);\n          });\n          debug('after update', hook.result);\n        },\n        find(hook) {\n          hook.result = _.map(hook.result, (result) => {\n            let serialNumber = `${result.serial_number}`;\n            if (!verifySerialNumber(serialNumber)) {\n              serialNumber = getOriginalSerialNumber(serialNumber);\n            }\n            result.serial_number = parseInt(serialNumber, 10);\n            result.owner.wistiki_has_owner.wistiki_serial_number = parseInt(serialNumber, 10);\n            _.each(result.friends, (friend) => {\n              friend.wistiki_has_friend.wistiki_serial_number = parseInt(serialNumber, 10);\n            });\n            return result;\n          });\n        },\n      },\n    });\n\n    app.service('/wistikis/:sn/owner').hooks({\n      before: {\n        async create(hook) {\n          const serialNumber = `${hook.params.sn}`;\n          const userEmail = hook.params.user.email;\n          const wistikiHasOwner = await WistikiHasOwner.getUserPairing(userEmail, serialNumber);\n          const wistikiHasFriend = await WistikiHasFriend.getUserPairing(userEmail, serialNumber);\n          if (!wistikiHasOwner && !wistikiHasFriend) {\n            hook.params.verifiedSerialNumber = transformSerialNumber(serialNumber);\n          } else {\n            hook.params.verifiedSerialNumber = parseInt(serialNumber, 10);\n          }\n          debug(hook.params.verifiedSerialNumber);\n        },\n      },\n      after: {\n        async create(hook) {\n          hook.result.serial_number = parseInt(hook.params.sn, 10);\n          hook.result.owner.wistiki_has_owner.wistiki_serial_number = parseInt(hook.params.sn, 10);\n          _.each(hook.result.friends, (friend) => {\n            friend.wistiki_has_friend.wistiki_serial_number = parseInt(hook.params.sn, 10);\n          });\n          debug(hook.result);\n        },\n      },\n    });\n\n    app.service('/wistikis/:sn/friends').hooks({\n      before: {\n        async create(hook) {\n          const serialNumber = `${hook.params.sn}`;\n          const userEmail = hook.params.user.email;\n          const wistikiHasOwner = await WistikiHasOwner.getUserPairing(userEmail, serialNumber);\n          const wistikiHasFriend = await WistikiHasFriend.getUserPairing(userEmail, serialNumber);\n          if (!wistikiHasOwner && !wistikiHasFriend) {\n            hook.params.verifiedSerialNumber = transformSerialNumber(serialNumber);\n          } else {\n            hook.params.verifiedSerialNumber = parseInt(serialNumber, 10);\n          }\n          debug(hook.params.verifiedSerialNumber);\n        },\n        async remove(hook) {\n          const serialNumber = `${hook.params.sn}`;\n          const userEmail = hook.id;\n          const wistikiHasOwner = await WistikiHasOwner.getUserPairing(userEmail, serialNumber);\n          const wistikiHasFriend = await WistikiHasFriend.getUserPairing(userEmail, serialNumber);\n          if (!wistikiHasOwner && !wistikiHasFriend) {\n            hook.params.verifiedSerialNumber = transformSerialNumber(serialNumber);\n          } else {\n            hook.params.verifiedSerialNumber = parseInt(serialNumber, 10);\n          }\n        },\n      },\n      after: {\n        create(hook) {\n          debug('after create friends', hook.result);\n        },\n        remove(hook) {\n          debug('after remove friends', hook.result);\n          if (hook.result) {\n            hook.result.serial_number = parseInt(hook.params.sn, 10);\n            hook.result.owner.wistiki_has_owner.wistiki_serial_number = parseInt(hook.params.sn, 10);\n            _.each(hook.result.friends, (friend) => {\n              friend.wistiki_has_friend.wistiki_serial_number = parseInt(hook.params.sn, 10);\n            });\n            debug(hook.result);\n          }\n        },\n      },\n    });\n\n    app.service('/positions').hooks({\n      before: {\n        async create(hook) {\n          const { wistikis } = hook.data;\n          hook.data.wistiki = await Promise.all(_.map(wistikis, async (wistiki) => {\n            const serialNumber = `${wistiki.serial_number}`;\n            const wistikiModel = await Wistiki.cache().findById(serialNumber);\n            let verifiedSerialNumber = serialNumber;\n            if (wistikiModel && !(wistikiModel.compareMsnCipher(wistiki.msn_cipher))) {\n              verifiedSerialNumber = transformSerialNumber(serialNumber);\n            }\n            wistiki.verifiedSerialNumber = parseInt(verifiedSerialNumber, 10);\n            return wistiki;\n          }));\n          debug('brefore position create new data', hook.data);\n        },\n      },\n    });\n\n    app.service('/wistikis/:sn/founds').hooks({\n      before: {\n        async create(hook) {\n          const serialNumber = `${hook.params.sn}`;\n          hook.params.verifiedSerialNumber = parseInt(serialNumber, 10);\n          const wistikiModel = await Wistiki.cache().findById(serialNumber);\n          if (wistikiModel && !(wistikiModel.compareMsnCipher(hook.data.msn_cipher))) {\n            hook.params.verifiedSerialNumber = transformSerialNumber(serialNumber);\n          }\n        },\n      },\n    });\n  };\n}\n"],"sourceRoot":"/opt/atlassian/pipelines/agent/build/src"}