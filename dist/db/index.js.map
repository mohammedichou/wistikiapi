{"version":3,"sources":["db/index.js"],"names":["redis","Redis","host","process","env","CACHE_HOST","config","port","redisAdaptor","RedisAdaptor","client","namespace","lifetime","database","withCache","sequelize","Sequelize","schema","username","password","replication","dialect","pool","minConnections","maxIdleTime","logging","log","duration","benchmark","User","import","Device","DeviceHasUser","Message","MessageHasStatus","Model","Software","Thread","ThreadHasUser","Wistiki","WistikiHasFriend","WistikiHasOwner","DeviceHasPosition","Position","WistikiHasPosition","Application","AppKey","Role","Resource","Privilege","Scope","ApplicationHasScope","RoleHasScope","belongsTo","hasMany","scope","deletedAt","belongsToMany","through","model","unique","ownership_end_date","foreignKey","as","share_end_date","hasOne","status","position_end_date","singular","plural"],"mappings":"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","file":"index.js","sourcesContent":["import Sequelize from 'sequelize';\n//TODO: use one redis module instead of different ones\nimport Redis from 'ioredis';\nimport RedisAdaptor from 'sequelize-transparent-cache-ioredis';\nimport sequelizeCache from 'sequelize-transparent-cache';\nimport config from '../config';\nimport { sqlLogger } from '../lib/logger';\n\nconst redis = new Redis({\n  host: process.env.CACHE_HOST ? process.env.CACHE_HOST : config.redis.host,\n  port: config.redis.port,\n});\nconst redisAdaptor = new RedisAdaptor({\n  client: redis,\n  namespace: 'model',\n  lifetime: 60 * 60 * 24,\n});\n\n\nconst { database } = config;\nconst { withCache } = sequelizeCache(redisAdaptor);\n\nconst sequelize = new Sequelize(database.schema, database.username, database.password, {\n  replication: database.replication,\n  dialect: 'mysql',\n  port: database.port,\n  pool: {\n    minConnections: 20,\n    maxIdleTime: 30000,\n  },\n  logging: (log, duration) => {\n    // sqlLogger.debug(log, {\n    //   duration,\n    // });\n  },\n  benchmark: true,\n});\n\n// Models with cache enabled\nconst User = withCache(sequelize.import('./models/user'));\nconst Device = withCache(sequelize.import('./models/device'));\nconst DeviceHasUser = withCache(sequelize.import('./models/device_has_user'));\nconst Message = withCache(sequelize.import('./models/message'));\nconst MessageHasStatus = withCache(sequelize.import('./models/message_has_status'));\nconst Model = withCache(sequelize.import('./models/model'));\nconst Software = withCache(sequelize.import('./models/software'));\nconst Thread = withCache(sequelize.import('./models/thread'));\nconst ThreadHasUser = withCache(sequelize.import('./models/thread_has_user'));\nconst Wistiki = withCache(sequelize.import('./models/wistiki'));\nconst WistikiHasFriend = withCache(sequelize.import('./models/wistiki_has_friend'));\nconst WistikiHasOwner = withCache(sequelize.import('./models/wistiki_has_owner'));\n\nconst DeviceHasPosition = sequelize.import('./models/device_has_position');\nconst Position = sequelize.import('./models/position');\n\nconst WistikiHasPosition = sequelize.import('./models/wistiki_has_position');\n\nconst Application = sequelize.import('./models/application');\nconst AppKey = sequelize.import('./models/appKey');\nconst Role = sequelize.import('./models/role');\nconst Resource = sequelize.import('./models/resource');\nconst Privilege = sequelize.import('./models/privilege');\nconst Scope = sequelize.import('./models/scope');\nconst ApplicationHasScope = sequelize.import('./models/application_has_scope');\nconst RoleHasScope = sequelize.import('./models/role_has_scope');\n\n// ---------------------------------------Application---------------------------------------\n\nApplication.belongsTo(User);\nApplication.hasMany(AppKey, {\n  scope: {\n    deletedAt: null,\n  },\n});\nScope.belongsToMany(Application, {\n  through: {\n    model: ApplicationHasScope,\n  },\n});\nAppKey.belongsTo(Application);\n// ---------------------------------------Role------------------------------------------------\n\nScope.belongsToMany(Role, {\n  through: {\n    model: RoleHasScope,\n  },\n});\n\n// ---------------------------------------DeviceHasUser---------------------------------------\nDeviceHasUser.belongsTo(Device);\nDeviceHasUser.belongsTo(User);\n\n// ---------------------------------------WistikiHasFriend------------------------------------\nWistikiHasFriend.belongsTo(User);\nWistikiHasFriend.belongsTo(Wistiki);\n\n// ---------------------------------------WistikiHasOwner-------------------------------------\nWistikiHasOwner.belongsTo(User);\n\n// ---------------------------------------ThreadHasUser---------------------------------------\nThreadHasUser.belongsTo(User);\n\n// ---------------------------------------MessageHasStatus------------------------------------\nMessageHasStatus.belongsTo(Message);\nMessageHasStatus.belongsTo(User);\n\n// ---------------------------------------Wistiki--------------------------------------------\nWistiki.belongsTo(Model);\nWistiki.belongsToMany(User, {\n  through: {\n    model: WistikiHasOwner,\n    unique: true,\n    scope: {\n      ownership_end_date: null,\n    },\n  },\n  foreignKey: 'wistiki_serial_number',\n  as: 'owner',\n\n});\nWistiki.belongsToMany(User, {\n  through: {\n    model: WistikiHasFriend,\n    scope: {\n      share_end_date: null,\n    },\n  },\n  foreignKey: 'wistiki_serial_number',\n  as: 'friends',\n});\n\n\nModel.hasMany(Software);\nModel.hasOne(Software, {\n  as: 'last_software',\n  foreignKey: 'model_id',\n  scope: {\n    status: '1',\n  },\n});\nWistiki.belongsToMany(Position, {\n  through: {\n    model: WistikiHasPosition,\n    scope: {\n      position_end_date: null,\n    },\n  },\n  foreignKey: 'wistiki_serial_number',\n  as: 'positions',\n});\n\nWistiki.hasOne(WistikiHasPosition, {\n  as: 'last_position',\n  foreignKey: 'wistiki_serial_number',\n});\n\n// ---------------------------------------Device---------------------------------------\nDevice.belongsToMany(User, {\n  through: {\n    model: DeviceHasUser,\n  },\n  foreignKey: 'device_uid',\n  as: 'owner',\n});\nDevice.belongsToMany(Position, {\n  through: {\n    model: DeviceHasPosition,\n  },\n  foreignKey: 'device_uid',\n  as: 'positions',\n});\n\n// ---------------------------------------Thread---------------------------------------\nThread.belongsToMany(User, {\n  through: {\n    model: ThreadHasUser,\n  },\n  foreignKey: 'thread_id',\n  as: {\n    singular: 'participant',\n    plural: 'participants',\n  },\n});\n\nThread.belongsTo(User, { as: 'creator', foreignKey: 'user_email' });\nThread.hasMany(Message);\nThread.hasOne(Message, {\n  as: 'last_message',\n  foreignKey: 'thread_id',\n});\n\n// ---------------------------------------Message---------------------------------------\n\nMessage.belongsTo(Thread);\nMessage.belongsTo(User, { as: 'author', foreignKey: 'user_email' });\nMessage.hasMany(MessageHasStatus, { as: 'states', foreignKey: 'message_id' });\n\n// ---------------------------------------User---------------------------------------\nUser.belongsToMany(Thread, {\n  through: {\n    model: ThreadHasUser,\n  },\n});\n\nUser.hasMany(Message);\n\nUser.belongsToMany(Wistiki, {\n  through: {\n    model: WistikiHasOwner,\n    scope: {\n      ownership_end_date: null,\n    },\n    unique: true,\n  },\n  foreignKey: 'user_email',\n  as: 'activeOwnership',\n});\n\nUser.belongsToMany(Device, {\n  through: {\n    model: DeviceHasUser,\n  },\n  foreignKey: 'user_email',\n  as: 'ownedDevices',\n\n});\n\nUser.belongsToMany(Wistiki, {\n  through: {\n    model: WistikiHasFriend,\n    scope: {\n      share_end_date: null,\n    },\n  },\n  foreignKey: 'user_email',\n  as: {\n    singular: 'activeSharedWistiki',\n    plural: 'activeSharedWistikis',\n  },\n});\n\n\n// ---------------------------------------Position---------------------------------------\nPosition.belongsToMany(Wistiki, {\n  through: {\n    model: WistikiHasPosition,\n    scope: {\n      position_end_date: null,\n    },\n  },\n  foreignKey: 'position_id',\n  as: {\n    singular: 'activePosition',\n    plural: 'activePositions',\n  },\n});\n\n// ---------------------------------------WistikiHasPosition---------------------------------------\nWistikiHasPosition.belongsTo(Position);\nexport {\n  User,\n  Device,\n  DeviceHasUser,\n  DeviceHasPosition,\n  Message,\n  MessageHasStatus,\n  Model,\n  Position,\n  Software,\n  Thread,\n  ThreadHasUser,\n  Wistiki,\n  WistikiHasFriend,\n  WistikiHasOwner,\n  WistikiHasPosition,\n  Application,\n  AppKey,\n  Scope,\n  Role,\n  ApplicationHasScope,\n  RoleHasScope,\n  Resource,\n  Privilege,\n};\n\n\nexport default sequelize;\n"],"sourceRoot":"/opt/atlassian/pipelines/agent/build/src"}