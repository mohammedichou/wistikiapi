{"version":3,"sources":["services/model.js"],"names":["Service","find","params","callback","resolve","reject","MethodNotImplemented","get","id","Model","findById","then","model","errors","NotFound","catch","err","FeathersError","create","data","Conflict","update","BadRequest","where","patch","remove","destroy","NoContent","setup","app","path","service","bind","filter","connection"],"mappings":"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","file":"model.js","sourcesContent":["import {NoContent} from '../modules/errors';\nimport {Model} from '../db';\n\n/**\n * Service for Models\n * @type {{\n * find: (function(*, *)),\n * get: (function(*, *, *)),\n * create: (function(*, *, *)),\n * update: (function(*, *, *, *)),\n * patch: (function(*, *, *, *)),\n * remove: (function(*, *, *)),\n * setup: (function(*=, *))\n * }}\n */\nvar Service = {\n\t/**\n\t * TODO: Description\n\t * @param params\n\t * @param callback\n\t */\n\tfind(params, callback){\n\t\treturn new Promise((resolve, reject) => {\n\t\t\treject(new MethodNotImplemented);\n\t\t});\n\t},\n\t/**\n\t * Get model by id. Throws an error if none can be found\n\t *\n\t * @param id requested user id\n\t * @param params\n\t * @param callback\n\t */\n\tget(id, params, callback){\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tModel.findById(id)\n\t\t\t\t.then((model) => (!model) ? reject(new this.errors.NotFound(`Model ${id} not found`)) : resolve(model))\n\t\t\t\t.catch((err) => reject(new this.errors.FeathersError(err)));\n\t\t});\n\t},\n\t/**\n\t * TODO: Description\n\t * @param data\n\t * @param params\n\t * @param callback\n\t */\n\tcreate(data, params, callback){\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tModel.findById(data.id)\n\t\t\t\t.then((model) => {\n\n\t\t\t\t\tif (model) {\n\t\t\t\t\t\treturn reject(new this.errors.Conflict(`Model ${data.id} already exist`));\n\t\t\t\t\t}\n\n\t\t\t\t\tModel.create(data)\n\t\t\t\t\t\t.then((model) => resolve(model))\n\t\t\t\t\t\t.catch((err) => reject(new this.errors.FeathersError(err)));\n\t\t\t\t})\n\t\t\t\t.catch((err) => reject(new this.errors.FeathersError(err)));\n\t\t});\n\t},\n\t/**\n\t * TODO: Description\n\t * @param id\n\t * @param data\n\t * @param params\n\t * @param callback\n\t */\n\tupdate(id, data, params, callback){\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tModel.findById(data.id)\n\t\t\t\t.then((model) => {\n\n\t\t\t\t\tif (!model) {\n\t\t\t\t\t\treturn reject(new this.errors.NotFound(`Model ${data.id} doesn't exist`));\n\t\t\t\t\t}\n\n\t\t\t\t\tif (id != data.id) {\n\t\t\t\t\t\treturn reject(new this.errors.BadRequest(`Id ${id} in url is different of id in model object (${data.id})`));\n\t\t\t\t\t}\n\n\t\t\t\t\tModel.update(data, {where: {id: id}})\n\t\t\t\t\t\t.then((model) => {\n\t\t\t\t\t\t\tModel.findById(id)\n\t\t\t\t\t\t\t\t.then((model) => resolve(model))\n\t\t\t\t\t\t\t\t.catch((err) => reject(new this.errors.FeathersError(err)));\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.catch((err) => reject(new this.errors.FeathersError(err)));\n\t\t\t\t})\n\t\t\t\t.catch((err) => reject(new this.errors.FeathersError(err)));\n\t\t});\n\t},\n\t/**\n\t * TODO: Description\n\t * @param id\n\t * @param data\n\t * @param params\n\t * @param callback\n\t */\n\tpatch(id, data, params, callback){\n\t\treturn new Promise((resolve, reject) => {\n\t\t\treject(new MethodNotImplemented);\n\t\t});\n\t},\n\t/**\n\t * TODO: Description\n\t * @param id\n\t * @param params\n\t * @param callback\n\t */\n\tremove(id, params, callback){\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tModel.findById(id)\n\t\t\t\t.then((model) => {\n\n\t\t\t\t\tif (!model) {\n\t\t\t\t\t\treject(new this.errors.NotFound(`Wistiki ${id} not found`));\n\t\t\t\t\t}\n\n\t\t\t\t\tModel.destroy({where: {id: id}})\n\t\t\t\t\t\t.then(resolve(new NoContent(`Model ${id} deleted with success`)))\n\t\t\t\t\t\t.catch((err) => reject(new this.errors.FeathersError(err)));\n\t\t\t\t})\n\t\t\t\t.catch((err) => reject(new this.errors.FeathersError(err)));\n\t\t});\n\t},\n\t/**\n\t * TODO: Description\n\t * @param app\n\t * @param path\n\t */\n\tsetup(app, path){\n\t\tthis.app = app;\n\t\tthis.errors = this.app.errors;\n\t\t//Bind the apps service method to service to always look services up dynamically\n\t\tthis.service = app.service.bind(app);\n\t\tthis.filter(function (data, connection) {\n\t\t\treturn false;\n\t\t});\n\t}\n};\n\nexport default Service;\n"],"sourceRoot":"/opt/atlassian/pipelines/agent/build/src"}