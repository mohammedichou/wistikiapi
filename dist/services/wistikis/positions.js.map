{"version":3,"sources":["services/wistikis/positions.js"],"names":["Service","find","params","Wistiki","findById","sn","attributes","exclude","_","union","sensibleData","wistiki","then","reject","errors","NotFound","id","ModelAcl","isAllowed","user","Forbidden","message","getPositions","order","limit","position","resolve","dataValues","wistiki_has_position","latitude","get","coordinates","longitude","create","data","callback","forEach","item","Position","type","accuracy","date","addActivePosition","serial_number","FeathersError","err","setup","app","path","service","bind","filter","connection","h","hook","before","all","after"],"mappings":"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","file":"positions.js","sourcesContent":["import _ from 'lodash';\nimport errors from 'feathers-errors';\nimport { Position, Wistiki } from '../../db';\nimport { sensibleData } from '../../config';\nimport { ModelAcl } from '../../middlewares/aclMiddleware';\n\n\nconst Service = {\n  /**\n   * Position service\n   * @param params\n   * @param callback\n   */\n  find(params) {\n    return Wistiki.findById(params.sn, {\n      attributes: {\n        exclude: _.union(sensibleData.wistiki, ['model_id']),\n      },\n    })\n      .then( // Check rights\n        (wistiki) => {\n          if (!wistiki) {\n            return Promise.reject(new errors.NotFound(`Wistiki ${id} not found`));\n          }\n          return ModelAcl.isAllowed(params.user, wistiki, 'get').then(\n            () => wistiki,\n            () => Promise.reject(new errors.Forbidden('MODEL_ACL_ERROR', {\n              errors: [{\n                message: 'You are not allowed to access this resource',\n              }],\n            })),\n          );\n        }).then( // Retrieve last position\n        wistiki => wistiki.getPositions({\n          order: 'id DESC',\n          limit: 1,\n          attributes: { exclude: ['id'] },\n        })\n          .then((position) => {\n            if (!position[0]) {\n              return Promise.resolve(null);\n            }\n\n            delete position[0].dataValues.wistiki_has_position;\n            position[0].dataValues.latitude = position[0].get('position').coordinates[0];\n            position[0].dataValues.longitude = position[0].get('position').coordinates[1];\n            delete position[0].dataValues.position;\n\n            return Promise.resolve(position[0]);\n          }));\n  },\n  /**\n   *\n   * @param {integer} id\n   * @param {object} data\n   * @param {object} params\n   * @param {function} callback\n   */\n  create(data, params, callback) {\n    return Wistiki.findById(params.sn)\n      .then( // Check wistiki\n        (wistiki) => {\n          if (!wistiki) {\n            return Promise.reject(new errors.NotFound(`Wistiki ${params.sn} not found`));\n          }\n          return Promise.resolve(wistiki);\n        })\n      .then( // Save all positions\n        (wistiki) => {\n          data.forEach(function (item) {\n            Position.create({\n              position: { type: 'Point', coordinates: [item.latitude, item.longitude] },\n              accuracy: item.accuracy,\n              date: item.date,\n            })\n              .then(\n                position => Promise.resolve(position.addActivePosition(wistiki.serial_number)),\n                err => reject(new this.errors.FeathersError(err)),\n              );\n          });\n          return Promise.resolve(null);\n        });\n  },\n\n  /**\n   * TODO: Description\n   * @param app\n   * @param path\n   */\n  setup(app, path) {\n    this.app = app;\n    // Bind the apps service method to service to always look services up dynamically\n    this.service = app.service.bind(app);\n    this.filter((data, connection) => false);\n    const h = service => (hook) => {\n      if (hook.type == 'before') {\n        // console.time(`${hook.method}:${service}`);\n      } else if (hook.type == 'after') {\n        // console.timeEnd(`${hook.method}:${service}`);\n      }\n    };\n    this.before({\n      all: h('wistikis/positions'),\n    });\n    this.after({\n      all: h('wistikis/positions'),\n    });\n  },\n};\n\nexport default Service;\n"],"sourceRoot":"/opt/atlassian/pipelines/agent/build/src"}