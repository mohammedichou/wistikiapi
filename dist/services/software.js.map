{"version":3,"sources":["services/software.js"],"names":["Service","find","params","callback","resolve","reject","MethodNotImplemented","get","id","Software","findById","then","software","errors","NotFound","catch","err","FeathersError","create","data","version","Conflict","Model","model_id","model","BadRequest","update","where","patch","remove","destroy","NoContent","setup","app","path","service","bind","filter","connection"],"mappings":"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","file":"software.js","sourcesContent":["import {NoContent} from '../modules/errors';\nimport {Software} from '../db';\nimport {Model} from '../db';\n\n/**\n * Service for Softwares\n * @type {{\n * find: (function(*, *)),\n * get: (function(*, *, *)),\n * create: (function(*, *, *)),\n * update: (function(*, *, *, *)),\n * patch: (function(*, *, *, *)),\n * remove: (function(*, *, *)),\n * setup: (function(*=, *))\n * }}\n */\nvar Service = {\n\t/**\n\t * TODO: Description\n\t * @param params\n\t * @param callback\n\t */\n\tfind(params, callback){\n\t\treturn new Promise((resolve, reject) => {\n\t\t\treject(new MethodNotImplemented);\n\t\t});\n\t},\n\t/**\n\t * Get software by id. Throws an error if none can be found\n\t *\n\t * @param id requested user id\n\t * @param params\n\t * @param callback\n\t */\n\tget(id, params, callback){\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tSoftware.findById(id)\n\t\t\t\t.then((software) => (!software) ? reject(new this.errors.NotFound(`Software ${id} not found`)) : resolve(software))\n\t\t\t\t.catch((err) => reject(new this.errors.FeathersError(err)));\n\t\t});\n\t},\n\t/**\n\t * TODO: Description\n\t * @param data\n\t * @param params\n\t * @param callback\n\t */\n\tcreate(data, params, callback){\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tSoftware.findById(data.version)\n\t\t\t\t.then((software) => {\n\n\t\t\t\t\tif (software) {\n\t\t\t\t\t\treturn reject(new this.errors.Conflict(`Software ${data.version} already exist`))\n\t\t\t\t\t}\n\n\t\t\t\t\tModel.findById(data.model_id)\n\t\t\t\t\t\t.then((model) => {\n\t\t\t\t\t\t\tif (!model) {\n\t\t\t\t\t\t\t\treject(new this.errors.BadRequest(`Software ${data.model_id} doesn't exist`));\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tSoftware.create(data)\n\t\t\t\t\t\t\t\t.then((software) => resolve(software))\n\t\t\t\t\t\t\t\t.catch((err) => reject(new this.errors.FeathersError(err)));\n\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.catch((err) => reject(new this.errors.FeathersError(err)));\n\t\t\t\t})\n\t\t\t\t.catch((err) => reject(new this.errors.FeathersError(err)));\n\t\t});\n\t},\n\t/**\n\t * TODO: Description\n\t * @param id\n\t * @param data\n\t * @param params\n\t * @param callback\n\t */\n\tupdate(id, data, params, callback){\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tSoftware.findById(data.version)\n\t\t\t\t.then((software) => {\n\n\t\t\t\t\tif (!software) {\n\t\t\t\t\t\treturn reject(new this.errors.NotFound(`Model ${data.version} doesn't exist`));\n\t\t\t\t\t}\n\n\t\t\t\t\tif (id != data.version) {\n\t\t\t\t\t\treturn reject(new this.errors.BadRequest(`Version ${id} in url is different of version in software object (${data.version})`));\n\t\t\t\t\t}\n\n\t\t\t\t\tSoftware.update(data, {where: {version: id}})\n\t\t\t\t\t\t.then((software) => {\n\t\t\t\t\t\t\tSoftware.findById(id)\n\t\t\t\t\t\t\t\t.then((software) => resolve(software))\n\t\t\t\t\t\t\t\t.catch((err) => reject(new this.errors.FeathersError(err)));\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.catch((err) => reject(new this.errors.FeathersError(err)));\n\t\t\t\t})\n\t\t\t\t.catch((err) => reject(new this.errors.FeathersError(err)));\n\t\t});\n\t},\n\t/**\n\t * TODO: Description\n\t * @param id\n\t * @param data\n\t * @param params\n\t * @param callback\n\t */\n\tpatch(id, data, params, callback){\n\t\treturn new Promise((resolve, reject) => {\n\t\t\treject(new MethodNotImplemented);\n\t\t});\n\t},\n\t/**\n\t * TODO: Description\n\t * @param id\n\t * @param params\n\t * @param callback\n\t */\n\tremove(id, params, callback){\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tSoftware.findById(id)\n\t\t\t\t.then((software) => {\n\n\t\t\t\t\tif (!software) {\n\t\t\t\t\t\treject(new this.errors.NotFound(`Software ${id} not found`));\n\t\t\t\t\t}\n\n\t\t\t\t\tSoftware.destroy({where: {version: id}})\n\t\t\t\t\t\t.then(resolve(new NoContent(`Software ${id} deleted with success`)))\n\t\t\t\t\t\t.catch((err) => reject(new this.errors.FeathersError(err)));\n\t\t\t\t})\n\t\t\t\t.catch((err) => reject(new this.errors.FeathersError(err)));\n\t\t});\n\t},\n\t/**\n\t * TODO: Description\n\t * @param app\n\t * @param path\n\t */\n\tsetup(app, path){\n\t\tthis.app = app;\n\t\tthis.errors = this.app.errors;\n\t\t//Bind the apps service method to service to always look services up dynamically\n\t\tthis.service = app.service.bind(app);\n\t\tthis.filter(function (data, connection) {\n\t\t\treturn false;\n\t\t});\n\t}\n};\n\nexport default Service;\n"],"sourceRoot":"/opt/atlassian/pipelines/agent/build/src"}