{"version":3,"sources":["services/firmwares.js"],"names":["Service","find","params","callback","resolve","reject","MethodNotImplemented","get","id","create","data","update","patch","remove","setup","app","path","errors","service","bind","filter","connection"],"mappings":";;;;;;;;;;AAAA;;;;AACA;;;;;;;;;;;;AAYA,IAAIA,UAAU;AACb;;;;;AAKAC,KANa,gBAMRC,MANQ,EAMAC,QANA,EAMS;AACrB,SAAO,sBAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACvCA,UAAO,IAAIC,4BAAJ,EAAP;AACA,GAFM,CAAP;AAGA,EAVY;;AAWb;;;;;;;AAOAC,IAlBa,eAkBTC,EAlBS,EAkBLN,MAlBK,EAkBGC,QAlBH,EAkBY;AACxB,SAAO,sBAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACvCA,UAAO,IAAIC,4BAAJ,EAAP;AACA,GAFM,CAAP;AAIA,EAvBY;;AAwBb;;;;;;AAMAG,OA9Ba,kBA8BNC,IA9BM,EA8BAR,MA9BA,EA8BQC,QA9BR,EA8BiB;AAC7B,SAAO,sBAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACvCA,UAAO,IAAIC,4BAAJ,EAAP;AACA,GAFM,CAAP;AAGA,EAlCY;;AAmCb;;;;;;;AAOAK,OA1Ca,kBA0CNH,EA1CM,EA0CFE,IA1CE,EA0CIR,MA1CJ,EA0CYC,QA1CZ,EA0CqB;AACjC,SAAO,sBAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACvCA,UAAO,IAAIC,4BAAJ,EAAP;AACA,GAFM,CAAP;AAGA,EA9CY;;AA+Cb;;;;;;;AAOAM,MAtDa,iBAsDPJ,EAtDO,EAsDHE,IAtDG,EAsDGR,MAtDH,EAsDWC,QAtDX,EAsDoB;AAChC,SAAO,sBAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACvCA,UAAO,IAAIC,4BAAJ,EAAP;AACA,GAFM,CAAP;AAGA,EA1DY;;AA2Db;;;;;;AAMAO,OAjEa,kBAiENL,EAjEM,EAiEFN,MAjEE,EAiEMC,QAjEN,EAiEe;AAC3B,SAAO,sBAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACvCA,UAAO,IAAIC,4BAAJ,EAAP;AACA,GAFM,CAAP;AAGA,EArEY;;AAsEb;;;;;AAKAQ,MA3Ea,iBA2EPC,GA3EO,EA2EFC,IA3EE,EA2EG;AACf,OAAKD,GAAL,GAAWA,GAAX;AACA,OAAKE,MAAL,GAAc,KAAKF,GAAL,CAASE,MAAvB;AACA;AACA,OAAKC,OAAL,GAAeH,IAAIG,OAAJ,CAAYC,IAAZ,CAAiBJ,GAAjB,CAAf;AACA,OAAKK,MAAL,CAAY,UAAUV,IAAV,EAAgBW,UAAhB,EAA4B;AACvC,UAAO,KAAP;AACA,GAFD;AAGA;AAnFY,CAAd;;kBAsFerB,O","file":"firmwares.js","sourcesContent":["import {MethodNotImplemented} from '../modules/errors';\n/**\n * Service for Firmwares\n * @type {{\n * find: (function(*, *)),\n * get: (function(*, *, *)),\n * create: (function(*, *, *)),\n * update: (function(*, *, *, *)),\n * patch: (function(*, *, *, *)),\n * remove: (function(*, *, *)),\n * setup: (function(*=, *))\n * }}\n */\nvar Service = {\n\t/**\n\t * TODO: Description\n\t * @param params\n\t * @param callback\n\t */\n\tfind(params, callback){\n\t\treturn new Promise((resolve, reject) => {\n\t\t\treject(new MethodNotImplemented);\n\t\t});\n\t},\n\t/**\n\t * Get user by id. Throws an error if none can be found\n\t *\n\t * @param id requested user id\n\t * @param params\n\t * @param callback\n\t */\n\tget(id, params, callback){\n\t\treturn new Promise((resolve, reject) => {\n\t\t\treject(new MethodNotImplemented);\n\t\t});\n\n\t},\n\t/**\n\t * TODO: Description\n\t * @param data\n\t * @param params\n\t * @param callback\n\t */\n\tcreate(data, params, callback){\n\t\treturn new Promise((resolve, reject) => {\n\t\t\treject(new MethodNotImplemented);\n\t\t});\n\t},\n\t/**\n\t * TODO: Description\n\t * @param id\n\t * @param data\n\t * @param params\n\t * @param callback\n\t */\n\tupdate(id, data, params, callback){\n\t\treturn new Promise((resolve, reject) => {\n\t\t\treject(new MethodNotImplemented);\n\t\t});\n\t},\n\t/**\n\t * TODO: Description\n\t * @param id\n\t * @param data\n\t * @param params\n\t * @param callback\n\t */\n\tpatch(id, data, params, callback){\n\t\treturn new Promise((resolve, reject) => {\n\t\t\treject(new MethodNotImplemented);\n\t\t});\n\t},\n\t/**\n\t * TODO: Description\n\t * @param id\n\t * @param params\n\t * @param callback\n\t */\n\tremove(id, params, callback){\n\t\treturn new Promise((resolve, reject) => {\n\t\t\treject(new MethodNotImplemented);\n\t\t});\n\t},\n\t/**\n\t * TODO: Description\n\t * @param app\n\t * @param path\n\t */\n\tsetup(app, path){\n\t\tthis.app = app;\n\t\tthis.errors = this.app.errors;\n\t\t//Bind the apps service method to service to always look services up dynamically\n\t\tthis.service = app.service.bind(app);\n\t\tthis.filter(function (data, connection) {\n\t\t\treturn false;\n\t\t});\n\t}\n};\n\nexport default Service;\n"],"sourceRoot":"/opt/atlassian/pipelines/agent/build/src"}