{"version":3,"sources":["services/version.js"],"names":["JwtStrategy","require","Strategy","Service","find","params","callback","resolve","version","packageJSON","environment","process","env","NODE_ENV","build","BUILD_REV","replace","setup","app","path","service","bind","filter","data","connection"],"mappings":";;;;;;;;;;AACA;;;;;;AADA,IAAIA,cAAcC,QAAQ,cAAR,EAAwBC,QAA1C;;;AAIA;;;;;;;;;;;;;AAaA,IAAIC,UAAU;;AAEb;;;;;AAKAC,KAPa,gBAORC,MAPQ,EAOAC,QAPA,EAOS;AACrB,SAAO,kBAAQC,OAAR,CAAgB;AACtBC,YAASC,kBAAYD,OADC;AAEtBE,gBAAaC,QAAQC,GAAR,CAAYC,QAFH;AAGtBC,UAAOH,QAAQC,GAAR,CAAYG,SAAZ,GAAsBJ,QAAQC,GAAR,CAAYG,SAAZ,CAAsBC,OAAtB,CAA8B,iBAA9B,EAAgD,EAAhD,CAAtB,GAA0E;AAH3D,GAAhB,CAAP;AAKA,EAbY;;AAcb;;;;;AAKAC,MAnBa,iBAmBPC,GAnBO,EAmBFC,IAnBE,EAmBG;AACf,OAAKD,GAAL,GAAWA,GAAX;AACA;AACA,OAAKE,OAAL,GAAeF,IAAIE,OAAJ,CAAYC,IAAZ,CAAiBH,GAAjB,CAAf;AACA,OAAKI,MAAL,CAAY,UAAUC,IAAV,EAAgBC,UAAhB,EAA4B;AACvC,UAAO,KAAP;AACA,GAFD;AAGA;AA1BY,CAAd;;kBA6BerB,O","file":"version.js","sourcesContent":["var JwtStrategy = require('passport-jwt').Strategy;\nimport packageJSON from '../../package.json';\n\n\n/**\n * Service for Wistikis\n * @type {{\n * find: (function(*, *)),\n * get: (function(*, *, *)),\n * create: (function(*, *, *)),\n * update: (function(*, *, *, *)),\n * patch: (function(*, *, *, *)),\n * remove: (function(*, *, *)),\n * setup: (function(*=, *))\n * }}\n */\n\nvar Service = {\n\n\t/**\n\t * Position service\n\t * @param params\n\t * @param callback\n\t */\n\tfind(params, callback){\n\t\treturn Promise.resolve({\n\t\t\tversion: packageJSON.version,\n\t\t\tenvironment: process.env.NODE_ENV,\n\t\t\tbuild: process.env.BUILD_REV?process.env.BUILD_REV.replace(/(?:\\r\\n|\\r|\\n)/g,''):'N.C'\n\t\t});\n\t},\n\t/**\n\t * TODO: Description\n\t * @param app\n\t * @param path\n\t */\n\tsetup(app, path){\n\t\tthis.app = app;\n\t\t//Bind the apps service method to service to always look services up dynamically\n\t\tthis.service = app.service.bind(app);\n\t\tthis.filter(function (data, connection) {\n\t\t\treturn false;\n\t\t});\n\t}\n};\n\nexport default Service;\n"],"sourceRoot":"/opt/atlassian/pipelines/agent/build/src"}