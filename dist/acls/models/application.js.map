{"version":3,"sources":["acls/models/application.js"],"names":["ApplicationModelPermission","acl","allow","user","application","resolve","reject","get","Permission"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;IAEqBA,0B;;;AACnB,sCAAYC,GAAZ,EAAiB;AAAA;AAAA,yKACTA,GADS,EACJ,aADI,EACW,CAAC,YAAD,EAAe,WAAf,CADX;AAEhB;;;;4BAEO;AACN,WAAKC,KAAL,CAAW,MAAX,EAAmB,CAAC,YAAD,EAAe,WAAf,CAAnB,EAAgD,UAACC,IAAD,EAAOC,WAAP;AAAA,eAAuB,sBAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtG,cAAIH,KAAKI,GAAL,CAAS,OAAT,KAAqBH,YAAYG,GAAZ,CAAgB,YAAhB,CAAzB,EACE,OAAOF,SAAP;AACFC;AACD,SAJsE,CAAvB;AAAA,OAAhD;AAMD;;;EAZqDE,oB;;kBAAnCR,0B","file":"application.js","sourcesContent":["import Permission from '../permission';\n\nexport default class ApplicationModelPermission extends Permission {\n  constructor(acl) {\n    super(acl, 'application', ['create_key', 'list_keys']);\n  }\n\n  build() {\n    this.allow('user', ['create_key', 'list_keys'], (user, application) => new Promise((resolve, reject) => {\n      if (user.get('email') == application.get('user_email'))\n        return resolve();\n      reject();\n    }));\n\n  }\n}\n\n\n"],"sourceRoot":"/opt/atlassian/pipelines/agent/build/src"}