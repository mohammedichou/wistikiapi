{"version":3,"sources":["acls/services/users/threads/root.js"],"names":["UserThreadsServicePermission","acl","allow","user","req","resolve","reject","email","params","Permission"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;IAEqBA,4B;;;AACpB,uCAAYC,GAAZ,EAAiB;AAAA;AAAA,2KACVA,GADU,EACL,uBADK,EACoB,CAAC,KAAD,CADpB;AAEhB;;;;0BAEO;AACP,QAAKC,KAAL,CAAW,MAAX,EAAmB,CAAC,KAAD,CAAnB,EAA4B,UAACC,IAAD,EAAOC,GAAP;AAAA,WAAe,sBAC1C,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpB,SAAIH,KAAKI,KAAL,IAAcH,IAAII,MAAJ,CAAWD,KAA7B,EACC,OAAOF,SAAP;AACDC;AACA,KALyC,CAAf;AAAA,IAA5B;AAOA;;;EAbwDG,oB;;kBAArCT,4B","file":"root.js","sourcesContent":["import Permission from '../../../permission';\n\nexport default class UserThreadsServicePermission extends Permission {\n\tconstructor(acl) {\n\t\tsuper(acl, '/users/:email/threads', ['GET']);\n\t}\n\n\tbuild() {\n\t\tthis.allow('user', ['GET'], (user, req) => new Promise(\n\t\t\t(resolve, reject) => {\n\t\t\t\tif (user.email == req.params.email)\n\t\t\t\t\treturn resolve();\n\t\t\t\treject();\n\t\t\t}\n\t\t));\n\t}\n}\n"],"sourceRoot":"/opt/atlassian/pipelines/agent/build/src"}