{"version":3,"sources":["acls/services/users/devices/id.js"],"names":["UserDeviceServicePermission","acl","allow","user","req","resolve","reject","email","params","Permission"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;IAEqBA,2B;;;AACnB,uCAAYC,GAAZ,EAAiB;AAAA;AAAA,2KACTA,GADS,EACJ,qCADI,EACmC,CAAC,KAAD,EAAQ,KAAR,EAAe,QAAf,CADnC;AAEhB;;;;4BAEO;AACN,WAAKC,KAAL,CAAW,MAAX,EAAmB,CAAC,KAAD,EAAQ,KAAR,EAAe,QAAf,CAAnB,EAA6C,UAACC,IAAD,EAAOC,GAAP;AAAA,eAAe,sBAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAC3F,cAAIH,KAAKI,KAAL,KAAeH,IAAII,MAAJ,CAAWD,KAA9B,EAAqC;AACnC,mBAAOF,SAAP;AACD;AACD,iBAAOC,QAAP;AACD,SAL2D,CAAf;AAAA,OAA7C;AAMD;;;EAZsDG,oB;;kBAApCT,2B","file":"id.js","sourcesContent":["import Permission from '../../../permission';\n\nexport default class UserDeviceServicePermission extends Permission {\n  constructor(acl) {\n    super(acl, '/users/:email/devices/:__feathersId', ['GET', 'PUT', 'DELETE']);\n  }\n\n  build() {\n    this.allow('user', ['GET', 'PUT', 'DELETE'], (user, req) => new Promise((resolve, reject) => {\n      if (user.email === req.params.email) {\n        return resolve();\n      }\n      return reject();\n    }));\n  }\n}\n"],"sourceRoot":"/opt/atlassian/pipelines/agent/build/src"}