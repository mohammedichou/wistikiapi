{"version":3,"sources":["acls/services/users/devices/root.js"],"names":["DevicesServicePermission","acl","allow","user","req","resolve","reject","email","params","Permission"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;IAEqBA,wB;;;AACnB,oCAAYC,GAAZ,EAAiB;AAAA;AAAA,qKACTA,GADS,EACJ,uBADI,EACqB,CAAC,KAAD,EAAQ,MAAR,EAAgB,KAAhB,CADrB;AAEhB;;;;4BAEO;AACN,WAAKC,KAAL,CAAW,MAAX,EAAmB,CAAC,KAAD,EAAQ,MAAR,EAAgB,KAAhB,CAAnB,EAA2C,UAACC,IAAD,EAAOC,GAAP;AAAA,eAAe,sBAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACzF,cAAIH,KAAKI,KAAL,KAAeH,IAAII,MAAJ,CAAWD,KAA9B,EAAqC;AACnC,mBAAOF,SAAP;AACD;AACD,iBAAOC,QAAP;AACD,SALyD,CAAf;AAAA,OAA3C;AAMD;;;EAZmDG,oB;;kBAAjCT,wB","file":"root.js","sourcesContent":["import Permission from '../../../permission';\n\nexport default class DevicesServicePermission extends Permission {\n  constructor(acl) {\n    super(acl, '/users/:email/devices', ['GET', 'POST', 'PUT']);\n  }\n\n  build() {\n    this.allow('user', ['GET', 'POST', 'PUT'], (user, req) => new Promise((resolve, reject) => {\n      if (user.email === req.params.email) {\n        return resolve();\n      }\n      return reject();\n    }));\n  }\n}\n"],"sourceRoot":"/opt/atlassian/pipelines/agent/build/src"}