{"version":3,"sources":["socket/client.js"],"names":["debug","deviceStatusMapping","uid","name","type","manufacturer","model","status","ring_status","date","wistikiStatusMapping","origin","serial_number","ble_status","last_connection","toHmset","object","mapping","mapped_keys","_","mapKeys","omitBy","v","isNull","value","key","fromHmset","mapValues","k","Client","socket","redisClient","feathers","user","device","Error","_socket","_redis","multi","set","getRoomKeyFor","get","expire","execAsync","_eventHandlers","room","id","event","callback","on","msg","emit","roomName","_buildRoomName","broadcast","to","resolve","reject","join","err","rooms","push","leave","pull","then","smembers","sadd","result","getUserWistikis","wistikis","map","w","each","serials","sn","broadcastToRoom","_status","_ringStatus","utc","toISOString","wistiki","hgetall","wistikisStatus","statuses","without","e","DeviceStatus","ONLINE","ringState","RingStatus","NOT_RINGING","hash","getState","d","unix","hmset","OFFLINE","serialNumber","BleStatus","DISCONNECTED","length","_onSetWistikiStatus","broadcastToUserRoom","socketClients","socketId","mgetAsync","uniq","uuids","keyName","leaveUserRoom","leaveDeviceRoom","leaveWistikiRoom","srem","del","setState","deviceLeftClients","deviceConnectedWistiki","delAsync","data","message","broadcastToWistikiRoom","Requests","RING_WISTIKI","broadcastToDeviceRoom","MUTE_WISTIKI","has","CONNECTED","res","Events","WISTIKI_STATUS","from","discovered_wistikis","Wistiki","findById","error","plain","generateAuthorizationKey","save","msn_cipher","authorization_key","catch","_onDisconnect","_onSetDeviceStatus","_onWistikiRingAction","_onDeviceRingAction","_onWistikiMuteAction","_onDeviceMuteAction","_onWistikiListAction","_onSetWistikiList","_onResetWistikiAction","_onWistikiReset","_onLeashEvent","_onInvertedLeashEvent","handler","bind"],"mappings":"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","file":"client.js","sourcesContent":["import _ from 'lodash';\nimport moment from 'moment';\nimport nodeDebug from 'debug';\nimport {Wistiki} from '../db';\nimport {Events, Requests, DeviceStatus, RingStatus, BleStatus} from './labels';\n\nvar debug = nodeDebug('wistiki:rt:client');\n\nconst deviceStatusMapping = {\n\tuid: 'u',\n\tname: 'n',\n\ttype: 't',\n\tmanufacturer: 'm',\n\tmodel: 'mo',\n\tstatus: 's',\n\tring_status: 'rs',\n\tdate: 'd'\n};\n\nconst wistikiStatusMapping = {\n\torigin: 'o',\n\tserial_number: 'sn',\n\tble_status: 'bs',\n\tring_status: 'rs',\n\tlast_connection: 'lc',\n\tdate:'d'\n};\n\n/**\n * This function will transform json object to another object with shrinked labels to be stored in Redis\n * @param object to shrink\n * @param mapping mapping object containing long to short label transormation\n * @return {*}\n */\nconst toHmset = (object, mapping) => {\n\tlet mapped_keys = _.mapKeys(_.omitBy(object, (v) => _.isNull(v)), (value, key) => mapping[key]);\n\treturn mapped_keys;\n};\n\n/**\n * Same as toHmset function but will do the reverse job. It will transform shrinked redis object to human readable object\n *\n * @param object to transform\n * @param mapping object containing long to short label transformation\n * @return {*}\n */\nconst fromHmset = (object, mapping) => {\n\tdebug(`fromHmset ${JSON.stringify(object)} => ${JSON.stringify(mapping)}`);\n\treturn _.mapValues(mapping, (k) => {\n\t\t//debug(`fromHmset: ${k} => ${object[k]}`);\n\t\treturn object[k];\n\t});\n};\n\n\nclass Client {\n\tconstructor(socket, redisClient) {\n\t\tif (!socket.feathers || !socket.feathers.user || !socket.feathers.device)\n\t\t\tthrow new Error('Unexpected authenticated socket: must contain feathers property');\n\t\tthis._socket = socket;\n\t\tthis._redis = redisClient;\n\t\tthis._redis.multi()\n\t\t\t.set(this.getRoomKeyFor('Socket'), this._socket.feathers.device.get('uid'))\n\t\t\t.expire(this.getRoomKeyFor('Socket'), 60*60*12)\n\t\t\t.execAsync();\n\t\tthis._eventHandlers();\n\t}\n\n\n\tgetRoomKeyFor(room) {\n\t\tswitch (room) {\n\t\t\tcase 'User':\n\t\t\t\treturn `c:u:${this.user.get('email')}`;\n\t\t\tcase 'Device':\n\t\t\t\treturn `c:d:${this.device.get('uid')}`;\n\t\t\tcase 'Socket':\n\t\t\t\treturn `c:s:${this._socket.id}`;\n\t\t\tcase 'SocketWistikis':\n\t\t\t\treturn `c:s:${this._socket.id}:r:w`;\n\t\t\tcase 'DeviceStatus':\n\t\t\t\treturn `s:d:${this.device.get('uid')}`;\n\t\t\tdefault:\n\t\t\t\tthrow Error('Room not defined');\n\t\t}\n\n\t}\n\n\tget id() {\n\t\treturn this._socket.id;\n\t}\n\n\tget user() {\n\t\treturn this._socket.feathers.user;\n\t}\n\n\tget device() {\n\t\treturn this._socket.feathers.device;\n\t}\n\n\tset user(user) {\n\t\tif (user && this._socket) {\n\t\t\tthis._socket.feathers.user = user;\n\t\t}\n\t}\n\n\tset device(device) {\n\t\tif (device && this._socket) {\n\t\t\tthis._socket.feathers.device = device;\n\t\t}\n\t}\n\n\ton(event, callback) {\n\t\tthis._socket.on(event, callback);\n\t}\n\n\temit(event, msg) {\n\t\tdebug(`emit ${this.device.get('uid')} : ${this.id}  %s -> `, event, msg);\n\t\tthis._socket.emit(event, msg);\n\t}\n\n\t/**\n\t *\n\t * @param room\n\t * @param id\n\t * @param event\n\t * @param msg\n\t */\n\tbroadcastToRoom(room, id, event, msg) {\n\t\tlet roomName = this._buildRoomName(room, id);\n\t\tdebug(`broadcastToRoom ${roomName} id: ${id}, event: ${event}, msg: ${JSON.stringify(msg)}`);\n\t\tthis._socket.broadcast.to(roomName).emit(event, msg);\n\t}\n\n\t/**\n\t * Add this client to room identified by id\n\t *\n\t * @param room\n\t * @param id\n\t * @returns {Promise<String>} generate room name\n\t */\n\tjoin(room, id = null) {\n\t\tlet roomName = this._buildRoomName(room, id);\n\t\tdebug(`joining room: ${room}, id: ${id}`);\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tthis._socket.join(roomName, (err) => {\n\t\t\t\tif (err) return reject(err);\n\t\t\t\tdebug(`joined room: ${roomName}, id: ${id}`);\n\t\t\t\tthis._socket.feathers.rooms.push(roomName);\n\t\t\t\tresolve(roomName);\n\t\t\t});\n\t\t});\n\n\t}\n\n\tleave(room, id = null) {\n\t\tlet roomName = this._buildRoomName(room, id);\n\t\tdebug(`leaving room: ${room}, id: ${id}`);\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tthis._socket.leave(roomName, (err) => {\n\t\t\t\tif (err) return reject(err);\n\t\t\t\tdebug(`leaved room: ${roomName}, id: ${id}`);\n\t\t\t\tthis._socket.feathers.rooms = _.pull(this._socket.feathers.rooms, roomName);\n\t\t\t\tresolve(roomName);\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * Add this client to user room and add {@link Client#id()} to user clients set (key: c:u:(email))\n\t *\n\t * @see Client#join\n\t * @returns {Promise.<Array>} containing clients connected to user room\n\t */\n\tjoinUserRoom() {\n\t\tdebug('joinUserRoom');\n\t\treturn this.join('User', this.user.get('email'))\n\t\t\t.then(\n\t\t\t\t(roomName) => {\n\t\t\t\t\tdebug('joinUserRoom: user room joined');\n\t\t\t\t\treturn this._redis.multi()\n\t\t\t\t\t\t.smembers(roomName)\n\t\t\t\t\t\t.sadd(roomName, this.id)\n\t\t\t\t\t\t.execAsync();\n\t\t\t\t}\n\t\t\t)\n\t\t\t.then(\n\t\t\t\t(result) => result[0]\n\t\t\t)\n\t}\n\n\tleaveUserRoom() {\n\t\tdebug('leaveUserRoom');\n\t\treturn this.leave('User', this.user.get('email'))\n\t\t\t.then(\n\t\t\t\t(roomName) => {\n\t\t\t\t\tdebug('leaveUserRoom: user room leaved');\n\t\t\t\t\treturn this._redis.multi();\n\t\t\t\t}\n\t\t\t)\n\t}\n\n\t/**\n\t * Add this client to device rroom and add {@link Client#id} to user clients set (key: c:d:(uid))\n\t *\n\t * @see Client#join\n\t * @returns {Promise.<String>|*}\n\t */\n\tjoinDeviceRoom() {\n\t\tdebug('joinDeviceRoom');\n\t\treturn this.join('Device', this.device.get('uid'))\n\t\t\t.then(\n\t\t\t\t(roomName) => {\n\t\t\t\t\tdebug('joinDeviceRoom: device room joined');\n\t\t\t\t\treturn this._redis.multi()\n\t\t\t\t\t\t.smembers(roomName)\n\t\t\t\t\t\t.sadd(roomName, this.id)\n\t\t\t\t\t\t.expire(roomName, 60*60*12)\n\t\t\t\t\t\t.execAsync();\n\t\t\t\t}\n\t\t\t);\n\t}\n\n\tleaveDeviceRoom() {\n\t\tdebug('leaveDeviceRoom');\n\t\treturn this.leave('Device', this.user.get('email'))\n\t\t\t.then(\n\t\t\t\t(roomName) => {\n\t\t\t\t\tdebug('leaveDeviceRoom: device room leaved');\n\t\t\t\t\treturn this._redis.multi();\n\t\t\t\t}\n\t\t\t)\n\t}\n\n\tjoinWistikiRoom() {\n\t\tdebug('joinWistikiRoom');\n\t\tthis.user.getUserWistikis().then(\n\t\t\t(wistikis) => _.map(wistikis,w => w.get('serial_number'))\n\t\t).then(\n\t\t\tserials => {\n\t\t\t\t_.each(serials, (sn) => {\n\t\t\t\t\tthis.join('SocketWistikis', sn).then(\n\t\t\t\t\t\t(roomName) => {\n\t\t\t\t\t\t\tdebug(`joinWistikiRoom: wistiki room ${sn} joined`);\n\t\t\t\t\t\t\treturn this._redis.multi()\n\t\t\t\t\t\t\t\t.smembers(roomName)\n\t\t\t\t\t\t\t\t.sadd(roomName, this.id)\n\t\t\t\t\t\t\t\t.expire(roomName, 60*60*12)\n\t\t\t\t\t\t\t\t.execAsync();\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t}\n\t\t);\n\t}\n\n\tleaveWistikiRoom() {\n\t\tdebug('leaveWistikiRoom');\n\t\tthis.user.getUserWistikis().then(\n\t\t\t(wistikis) => _.map(wistikis, w => w.get('serial_number'))\n\t\t).then(\n\t\t\tserials => {\n\t\t\t\t_.each(serials, (sn) => {\n\t\t\t\t\tthis.leave('SocketWistikis', sn).then(\n\t\t\t\t\t\t(roomName) => {\n\t\t\t\t\t\t\tdebug(`leaveWistikiRoom: wistiki room ${sn} leaved`);\n\t\t\t\t\t\t\treturn this._redis.multi()\n\t\t\t\t\t\t\t\t.smembers(roomName)\n\t\t\t\t\t\t\t\t.sadd(roomName, this.id)\n\t\t\t\t\t\t\t\t.expire(roomName, 60 * 60 * 12)\n\t\t\t\t\t\t\t\t.execAsync();\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t}\n\t\t);\n\t}\n\n\tbroadcastToUserRoom(event, msg) {\n\t\tthis.broadcastToRoom('User', this.user.get('email'), event, msg);\n\t}\n\n\tbroadcastToDeviceRoom(event, msg, id = this.device.get('uid')) {\n\t\tthis.broadcastToRoom('Device', id, event, msg);\n\t}\n\n\tbroadcastToWistikiRoom(event, msg, id){\n\t\tthis.broadcastToRoom('SocketWistikis', id, event, msg);\n\t}\n\n\n\t/***\n\t *\n\t * @returns {{uid: *, name: *, type: *, manufacturer: *, model: *, status: (string|*), ring_status: (string|*), date: *}}\n\t */\n\tgetState() {\n\t\treturn {\n\t\t\tuid: this.device.get('uid'),\n\t\t\tname: this.device.get('name'),\n\t\t\ttype: this.device.get('type'),\n\t\t\tmanufacturer: this.device.get('manufacturer'),\n\t\t\tmodel: this.device.get('model'),\n\t\t\tstatus: this._status,\n\t\t\tring_status: this._ringStatus,\n\t\t\tdate: moment().utc().toISOString()\n\t\t}\n\t}\n\n\tgetWistikiStates(){\n\t\treturn this.user.getUserWistikis().then(\n\t\t\twistikis => {\n\t\t\t\tlet multi = this._redis.multi();\n\t\t\t\t_.each(wistikis, wistiki => {\n\t\t\t\t\tdebug(`will try to get wistiki ${wistiki.serial_number} status`);\n\t\t\t\t\tmulti.hgetall(`s:w:${wistiki.serial_number}`);\n\t\t\t\t});\n\t\t\t\treturn multi.execAsync();\n\t\t\t}\n\t\t).then(\n\t\t\t(wistikisStatus) => {\n\t\t\t\tdebug(`got wistikis status : ${JSON.stringify(wistikisStatus)}`);\n\n\t\t\t\tlet statuses = _.map(_.without(wistikisStatus, null), (status) => status != null ? fromHmset(status, wistikiStatusMapping) : null);\n\t\t\t\tdebug(JSON.stringify(statuses));\n\t\t\t\t_.each(statuses, (status) => {\n\t\t\t\t\tdebug('wistikiStatusEvent : %s', JSON.stringify(status));\n\t\t\t\t\ttry {//temporary measure as some redis status were stored as moment objects\n\t\t\t\t\t\tstatus.last_connection = moment(status.last_connection).utc().toISOString();\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\tstatus.last_connection = status.last_connection.utc().toISOString();\n\t\t\t\t\t}\n\n\t\t\t\t\tif(status!=null)\n\t\t\t\t\t\tthis.emit('wistikiStatusEvent', status);\n\t\t\t\t});\n\t\t\t}\n\t\t)\n\t}\n\n\t/**\n\t *\n\t * @param status\n\t * @param ringState\n\t */\n\tsetState(status = DeviceStatus.ONLINE, ringState = RingStatus.NOT_RINGING) {\n\t\tdebug(`setState ${status} : ${ringState}`);\n\t\tthis._status = status;\n\t\tthis._ringStatus = ringState;\n\t\tlet hash = toHmset(this.getState(), deviceStatusMapping);\n\t\thash.d = moment(hash.d).unix(); //store date as unix\n\t\t// Store socket device status to s:d:(uid)\n\t\tlet multi = this._redis.multi();\n\t\tmulti.hmset(\n\t\t\tthis.getRoomKeyFor('DeviceStatus'),\n\t\t\thash\n\t\t);\n\t\tif(status == DeviceStatus.OFFLINE){\n\t\t\tmulti.smembers(`d:w:${this.device.get('uid')}`)\n\t\t}\n\n\t\treturn multi.execAsync().then(\n\t\t\t(result) => {\n\t\t\t\tif(status == DeviceStatus.OFFLINE && result[1] ){\n\t\t\t\t\tlet wistikis = _.map(result[1], (serialNumber) => {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tserial_number: serialNumber,\n\t\t\t\t\t\t\tble_status: BleStatus.DISCONNECTED,\n\t\t\t\t\t\t\tring_status: RingStatus.NOT_RINGING\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\tdebug('Device disconnected will send status', JSON.stringify(wistikis));\n\t\t\t\t\tif(wistikis.length)\n\t\t\t\t\t\treturn this._onSetWistikiStatus(wistikis);\n\t\t\t\t}\n\t\t\t\treturn null;\n\t\t\t}\n\t\t).then(() => this.broadcastToUserRoom('deviceStatusEvent', this.getState()));\n\n\n\t}\n\n\t/**\n\t * Returns list of user connected devices\n\t *\n\t * @param {Array.<String>} socketClients list of user clients\n\t * @returns {Array.<String>} Array containing connected devices uid\n\t */\n\tgetUserDevices(socketClients) {\n\t\tlet rooms = _.map(socketClients, (socketId)=>`c:s:${socketId}`);\n\n\n\t\treturn this._redis.mgetAsync(rooms).then(\n\t\t\tuuids => {\n\t\t\t\treturn _.without(_.uniq(uuids), this.device.get('uid'), null);\n\t\t\t} // Get unique devices other than current\n\t\t);\n\t}\n\n\t_buildKey(key, id) {\n\t\tlet keyName = key;\n\t\tswitch (key) {\n\t\t\tcase 'UserDevices':\n\t\t\t\tkeyName = `d:u:${id}`;\n\t\t\t\tbreak;\n\t\t}\n\t\treturn keyName;\n\t}\n\n\t_buildRoomName(room, id) {\n\t\tlet roomName = room;\n\t\tswitch (room) {\n\t\t\tcase 'User':\n\t\t\t\troomName = `c:u:${id}`;\n\t\t\t\tbreak;\n\t\t\tcase 'Device':\n\t\t\t\troomName = `c:d:${id}`;\n\t\t\t\tbreak;\n\t\t\tcase 'Socket':\n\t\t\t\troomName = `c:s:${id}`;\n\t\t\t\tbreak;\n\t\t\tcase 'SocketWistikis':\n\t\t\t\troomName = `c:s:${id}:r:w`;\n\t\t\t\tbreak;\n\t\t}\n\t\treturn roomName;\n\t}\n\n\t/**\n\t * Executed when client is disconnected. Will look into connected Wistiki and disconnect them by emitting an event\n\t * to Wistiki room\n\n\t * @private\n\t */\n\t_onDisconnect() {\n\t\tdebug('_onDisconnect');\n\t\treturn this.leaveUserRoom()\n\t\t\t.then(() => this.leaveDeviceRoom())\n\t\t\t.then(() => this.leaveWistikiRoom())\n\t\t\t.then(() => {\n\t\t\t\treturn this._redis.multi()\n\t\t\t\t\t.srem(this._buildRoomName('User', this.user.get('email')), 0, this.id)\n\t\t\t\t\t.srem(this._buildRoomName('Device', this.device.get('uid')), 0, this.id)\n\t\t\t\t\t.del(this.getRoomKeyFor('Socket'))\n\t\t\t\t\t.smembers(this._buildRoomName('Device', this.device.get('uid')))\n\t\t\t\t\t.execAsync()\n\t\t\t\t\t.then(\n\t\t\t\t\t\t(result) => {\n\t\t\t\t\t\t\tthis.setState(DeviceStatus.OFFLINE).then(() => null); //set device status to offline and broadcast it to user devices room\n\t\t\t\t\t\t\tlet deviceLeftClients = result[3];\n\t\t\t\t\t\t\tlet deviceConnectedWistiki = result[4];\n\t\t\t\t\t\t\tdebug(`_onDisconnect: result `, result);\n\t\t\t\t\t\t\tif (deviceLeftClients.length) {\n\t\t\t\t\t\t\t\tdebug(`deviceLeftClients is ${deviceLeftClients.length} so will broadcast to others`);\n\n\t\t\t\t\t\t\t\treturn this._redis.delAsync(this._buildRoomName('Device', this.device.get('uid')));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t)\n\t\t\t});\n\n\t}\n\n\t_onSetDeviceStatus(data) {\n\t\tdebug(`_onSetDeviceStatus ${this.device.get('uid')} : ${this.id} -> `, data);\n\t\t//TODO: add data sanity check\n\t\tthis.setState(DeviceStatus.ONLINE, data.ring_status);\n\t}\n\n\t_onWistikiRingAction(data) {\n\t\tdebug(`_onWistikiRingAction ${this.device.get('uid')} : ${this.id} ->`, data);\n\t\tif(!data.serial_number)\n\t\t\treturn;\n\t\tlet message = {\n\t\t\torigin: this.device.uid,\n\t\t\tserial_number: data.serial_number\n\t\t};\n\t\tthis.broadcastToWistikiRoom(Requests.RING_WISTIKI, message, data.serial_number);\n\t}\n\n\t_onDeviceRingAction(data) {\n\t\tdebug(`_onDeviceRingAction ${this.device.get('uid')} : ${this.id} ->`, data);\n\t\tthis.broadcastToDeviceRoom('deviceRingRequest', {\n\t\t\torigin: this.device.get('uid')\n\t\t}, data.uid);\n\t}\n\n\t_onDeviceMuteAction() {\n\t\tdebug(`_onDeviceMuteAction ${this.device.get('uid')} : ${this.id}`);\n\t}\n\n\t_onWistikiMuteAction(data) {\n\t\tdebug(`_onWistikiMuteAction ${this.device.get('uid')} : ${this.id}`);\n\t\tif(!data.serial_number)\n\t\t\treturn;\n\t\tlet message = {\n\t\t\torigin: this.device.uid,\n\t\t\tserial_number: data.serial_number\n\t\t};\n\t\tthis.broadcastToWistikiRoom(Requests.MUTE_WISTIKI, message, data.serial_number);\n\t}\n\n\t_onSetWistikiStatus(data) {\n\t\tdebug(`_onSetWistikiStatus ${this.device.get('uid')} : ${this.id} => ${JSON.stringify(data)}`);\n\t\tlet origin = this.device.get('uid');\n\t\t_.each(data, (wistiki)=> {\n\t\t\tif (!_.has(wistiki, 'serial_number') || !_.has(wistiki, 'ble_status') || !_.has(wistiki, 'ring_status')) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tlet message = {\n\t\t\t\torigin: origin,\n\t\t\t\tserial_number: wistiki.serial_number,\n\t\t\t\tble_status: wistiki.ble_status,\n\t\t\t\tring_status: wistiki.ring_status,\n\t\t\t\tlast_connection: moment(wistiki.last_connection).utc().toISOString(),\n\t\t\t\tdate: moment().utc().toISOString()\n\t\t\t};\n\t\t\tlet hash = toHmset(message, wistikiStatusMapping);\n\t\t\thash.d = moment(hash.d).unix(); //store date as unix\n\t\t\tdebug('store wistiki status', JSON.stringify(hash));\n\t\t\t// Store socket device status to s:d:(uid)\n\t\t\tlet multi = this._redis.multi();\n\t\t\tmulti.hmset(\n\t\t\t\t`s:w:${wistiki.serial_number}`,\n\t\t\t\thash\n\t\t\t);\n\t\t\tif (wistiki.ble_status === BleStatus.CONNECTED) {\n\t\t\t\tmulti.sadd(`d:w:${origin}`, wistiki.serial_number);\n\t\t\t}else{\n\t\t\t\tmulti.srem(`d:w:${origin}`, wistiki.serial_number);\n\t\t\t}\n\t\t\tmulti.execAsync().then(\n\t\t\t\t(res) => {\n\t\t\t\t\tdebug(`Set d:w:${origin}`, res);\n\t\t\t\t},\n\t\t\t\t(err) => {\n\t\t\t\t\tdebug(`Set error d:w:${origin}`, err);\n\t\t\t\t}\n\t\t\t);\n\t\t\tthis.broadcastToWistikiRoom( Events.WISTIKI_STATUS, message, wistiki.serial_number);\n\t\t});\n\t}\n\n\t_onWistikiListAction(data) {\n\t\tdebug(`_onWistikiListAction ${this.device.get('uid')} : ${this.id} -> ${data}`);\n\t\tthis.broadcastToDeviceRoom('wistikiListRequest', {\n\t\t\torigin: this.device.get('uid')\n\t\t}, data.uid);\n\t}\n\n\t_onSetWistikiList(data) {\n\t\tdebug(`_onSetWistikiList ${this.device.get('uid')} : ${this.id} ->`, data);\n\t\t//TODO: data sanity check\n\t\tthis.broadcastToDeviceRoom('wistikiListEvent', {\n\t\t\t\tfrom: this.device.get('uid'),\n\t\t\t\tdiscovered_wistikis: data.discovered_wistikis\n\t\t\t},\n\t\t\tdata.to\n\t\t)\n\t\t;\n\t}\n\n\t_onResetWistikiAction(data) {\n\t\tdebug(`_onResetWistikiAction ${this.device.get('uid')} : ${this.id} ->`, data);\n\t\tWistiki.findById(data.serial_number)\n\t\t\t.then(\n\t\t\t\t(wistiki) => {\n\t\t\t\t\tif (!wistiki)\n\t\t\t\t\t\treturn Promise.reject({error: `wistiki ${data.serial_number} not found`});\n\t\t\t\t\tdebug(`_onResetWistikiAction: wistiki found`, wistiki.get({plain: true}));\n\t\t\t\t\twistiki.generateAuthorizationKey();\n\t\t\t\t\treturn wistiki.save();\n\t\t\t\t}\n\t\t\t)\n\t\t\t.then(\n\t\t\t\t(wistiki) => {\n\t\t\t\t\tdebug(`_onResetWistikiAction: wistiki authorization key ${wistiki.get('authorization_key')}`);\n\t\t\t\t\tthis.broadcastToDeviceRoom('resetWistikiRequest', {\n\t\t\t\t\t\torigin: this.device.get('uid'),\n\t\t\t\t\t\tserial_number: data.serial_number,\n\t\t\t\t\t\tmsn_cipher: data.msn_cipher,\n\t\t\t\t\t\tauthorization_key: wistiki.get('authorization_key')\n\t\t\t\t\t}, data.to);\n\t\t\t\t}\n\t\t\t)\n\t\t\t.catch(\n\t\t\t\t(error) => {\n\t\t\t\t\tdebug('error: ', error)\n\t\t\t\t}\n\t\t\t);\n\n\t}\n\n\t_onWistikiReset(data){\n\t\tdebug(`_onWistikiReset ${this.device.get('uid')} : ${this.id} ->`, data);\n\t\tthis.broadcastToDeviceRoom('wistikiResetEvent', {\n\t\t\torigin: this.device.get('uid'),\n\t\t\tserial_number: data.serial_number\n\t\t}, data.to);\n\t}\n\n\t_onLeashEvent(data){\n\t\tdebug(`_onLeashEvent ${this.device.get('uid')} : ${this.id} ->`, data);\n\t\tthis.broadcastToWistikiRoom('wistikiLeashEvent', {\n\t\t\torigin: this.device.get('uid'),\n\t\t\tserial_number: data.serial_number\n\t\t}, data.serial_number);\n\t}\n\n\t_onInvertedLeashEvent(data){\n\t\tdebug(`_onInvertedLeashEvent ${this.device.get('uid')} : ${this.id} ->`, data);\n\t\tthis.broadcastToWistikiRoom('wistikiInvertedLeashEvent', {\n\t\t\torigin: this.device.get('uid'),\n\t\t\tserial_number: data.serial_number\n\t\t}, data.serial_number);\n\t}\n\n\t_eventHandlers() {\n\t\tlet event = {\n\t\t\t\"disconnect\": this._onDisconnect,\n\t\t\t\"setWistikiStatus\": this._onSetWistikiStatus,\n\t\t\t\"setDeviceStatus\": this._onSetDeviceStatus,\n\t\t\t\"wistikiRingAction\": this._onWistikiRingAction,\n\t\t\t\"deviceRingAction\": this._onDeviceRingAction,\n\t\t\t\"wistikiMuteAction\": this._onWistikiMuteAction,\n\t\t\t\"deviceMuteAction\": this._onDeviceMuteAction,\n\t\t\t\"wistikiListAction\": this._onWistikiListAction,\n\t\t\t\"setWistikiList\": this._onSetWistikiList,\n\t\t\t\"resetWistikiAction\": this._onResetWistikiAction,\n\t\t\t\"setWistikiReset\": this._onWistikiReset,\n\t\t\t\"wistikiLeashEvent\": this._onLeashEvent,\n\t\t\t\"wistikiInvertedLeashEvent\": this._onInvertedLeashEvent\n\t\t};\n\t\t_.each(event, (handler, event) => {\n\t\t\tthis.on(event, handler.bind(this));\n\t\t});\n\t}\n}\n\nexport default Client;\n"],"sourceRoot":"/opt/atlassian/pipelines/agent/build/src"}