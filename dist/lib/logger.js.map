{"version":3,"sources":["lib/logger.js"],"names":["winston","remove","transports","Console","add","colorize","prettyPrint","timestamp","Date","toISOString","level","awsOptions","logGroupName","logStreamName","awsAccessKeyId","AWSConfig","accessKeyId","awsSecretKey","secretAccessKey","awsRegion","awsLogger","Logger","awsSnsLogger","awsErrorLogger","awsSocketLogger","awsRedisLogger","awsMsnCipherLogger","awsSqlLogger","ownershiplLogger","awsChipoloLogger","CloudWatchTransport","config","hostname","socketLogger","process","env","NODE_ENV","awsLog","snsLog","errorLog","socketLog","msnLog","sqlLogger","redisLogger","chipoloLogger"],"mappings":";;;;;;;AAIA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAPA;;;;AASAA,kBAAQC,MAAR,CAAeD,kBAAQE,UAAR,CAAmBC,OAAlC;AACAH,kBAAQI,GAAR,CAAYJ,kBAAQE,UAAR,CAAmBC,OAA/B,EAAwC;AACtCE,YAAU,IAD4B;AAEtCC,eAAa,IAFyB;AAGtCC,WAHsC,uBAG1B;AACV,WAAO,IAAIC,IAAJ,GAAWC,WAAX,EAAP;AACD;AALqC,CAAxC;AAOAT,kBAAQU,KAAR,GAAgB,OAAhB;kBACeV,iB;;;AAEf,IAAMW,aAAa,SAAbA,UAAa,CAAUD,KAAV,EAAiBE,YAAjB,EAA+BC,aAA/B,EAA8C;AAC/D,SAAO;AACLD,8BADK;AAELC,gCAFK;AAGLC,oBAAgBC,0BAAUC,WAHrB;AAILC,kBAAcF,0BAAUG,eAJnB;AAKLC,eAAW;AALN,GAAP;AAOD,CARD;AASA,IAAMC,YAAY,IAAKpB,kBAAQqB,MAAb,EAAlB;AACA,IAAMC,eAAe,IAAKtB,kBAAQqB,MAAb,EAArB;AACA,IAAME,iBAAiB,IAAKvB,kBAAQqB,MAAb,EAAvB;AACA,IAAMG,kBAAkB,IAAKxB,kBAAQqB,MAAb,EAAxB;AACA,IAAMI,iBAAiB,IAAKzB,kBAAQqB,MAAb,EAAvB;AACA,IAAMK,qBAAqB,IAAK1B,kBAAQqB,MAAb,EAA3B;AACA,IAAMM,eAAe,IAAK3B,kBAAQqB,MAAb,EAArB;AACA,IAAMO,mBAAmB,IAAK5B,kBAAQqB,MAAb,EAAzB;AACA,IAAMQ,mBAAmB,IAAK7B,kBAAQqB,MAAb,EAAzB;;AAEAD,UAAUhB,GAAV,CAAc0B,oCAAd,EAAmCnB,WAAW,OAAX,EAAoBoB,iBAAOC,QAA3B,EAAqC,KAArC,CAAnC;AACAV,aAAalB,GAAb,CAAiB0B,oCAAjB,EAAsCnB,WAAW,OAAX,EAAoBoB,iBAAOC,QAA3B,EAAqC,KAArC,CAAtC;AACAT,eAAenB,GAAf,CAAmB0B,oCAAnB,EAAwCnB,WAAW,OAAX,EAAoBoB,iBAAOC,QAA3B,EAAqC,OAArC,CAAxC;AACAR,gBAAgBpB,GAAhB,CAAoB0B,oCAApB,EAAyCnB,WAAW,OAAX,EAAoBoB,iBAAOC,QAA3B,EAAqC,QAArC,CAAzC;AACAP,eAAerB,GAAf,CAAmB0B,oCAAnB,EAAwCnB,WAAW,OAAX,EAAoBoB,iBAAOC,QAA3B,EAAqC,OAArC,CAAxC;AACAN,mBAAmBtB,GAAnB,CAAuB0B,oCAAvB,EAA4CnB,WAAW,OAAX,EAAoBoB,iBAAOC,QAA3B,EAAqC,WAArC,CAA5C;AACAL,aAAavB,GAAb,CAAiB0B,oCAAjB,EAAsCnB,WAAW,OAAX,EAAoBoB,iBAAOC,QAA3B,EAAqC,KAArC,CAAtC;AACAJ,iBAAiBxB,GAAjB,CAAqB0B,oCAArB,EAA0CnB,WAAW,OAAX,EAAoBoB,iBAAOC,QAA3B,EAAqC,WAArC,CAA1C;AACAH,iBAAiBzB,GAAjB,CAAqB0B,oCAArB,EAA0CnB,WAAW,OAAX,EAAoBoB,iBAAOC,QAA3B,EAAqC,SAArC,CAA1C;;AAEA,IAAMC,eAAeC,QAAQC,GAAR,CAAYC,QAAZ,KAAyB,SAAzB,IAAsCF,QAAQC,GAAR,CAAYC,QAAZ,KAAyB,aAA/D,GAA+EpC,iBAA/E,GAAyFwB,eAA9G;;QAGea,M,GAAbjB,S;QACgBkB,M,GAAhBhB,Y;QACkBiB,Q,GAAlBhB,c;QACgBiB,S,GAAhBP,Y;QACsBQ,M,GAAtBf,kB;QACgBgB,S,GAAhBf,Y;QACAC,gB,GAAAA,gB;QACkBe,W,GAAlBlB,c;QACoBmB,a,GAApBf,gB","file":"logger.js","sourcesContent":["/**\n * Wistiki SAS\n * Created by adnene on 07/12/2015.\n */\nimport winston from 'winston';\nimport CloudWatchTransport from 'winston-cloudwatch-transport';\nimport AWSConfig from '../config/aws_credentials.json';\nimport config from '../config';\n\nwinston.remove(winston.transports.Console);\nwinston.add(winston.transports.Console, {\n  colorize: true,\n  prettyPrint: true,\n  timestamp() {\n    return new Date().toISOString();\n  },\n});\nwinston.level = 'debug';\nexport default winston;\n\nconst awsOptions = function (level, logGroupName, logStreamName) {\n  return {\n    logGroupName,\n    logStreamName,\n    awsAccessKeyId: AWSConfig.accessKeyId,\n    awsSecretKey: AWSConfig.secretAccessKey,\n    awsRegion: 'eu-west-1',\n  };\n};\nconst awsLogger = new (winston.Logger)();\nconst awsSnsLogger = new (winston.Logger)();\nconst awsErrorLogger = new (winston.Logger)();\nconst awsSocketLogger = new (winston.Logger)();\nconst awsRedisLogger = new (winston.Logger)();\nconst awsMsnCipherLogger = new (winston.Logger)();\nconst awsSqlLogger = new (winston.Logger)();\nconst ownershiplLogger = new (winston.Logger)();\nconst awsChipoloLogger = new (winston.Logger)();\n\nawsLogger.add(CloudWatchTransport, awsOptions('silly', config.hostname, 'all'));\nawsSnsLogger.add(CloudWatchTransport, awsOptions('silly', config.hostname, 'sns'));\nawsErrorLogger.add(CloudWatchTransport, awsOptions('silly', config.hostname, 'error'));\nawsSocketLogger.add(CloudWatchTransport, awsOptions('silly', config.hostname, 'socket'));\nawsRedisLogger.add(CloudWatchTransport, awsOptions('silly', config.hostname, 'redis'));\nawsMsnCipherLogger.add(CloudWatchTransport, awsOptions('silly', config.hostname, 'msnCipher'));\nawsSqlLogger.add(CloudWatchTransport, awsOptions('silly', config.hostname, 'sql'));\nownershiplLogger.add(CloudWatchTransport, awsOptions('silly', config.hostname, 'ownership'));\nawsChipoloLogger.add(CloudWatchTransport, awsOptions('silly', config.hostname, 'chipolo'));\n\nconst socketLogger = process.env.NODE_ENV === 'default' || process.env.NODE_ENV === 'development' ? winston : awsSocketLogger;\n\nexport {\n  awsLogger as awsLog,\n  awsSnsLogger as snsLog,\n  awsErrorLogger as errorLog,\n  socketLogger as socketLog,\n  awsMsnCipherLogger as msnLog,\n  awsSqlLogger as sqlLogger,\n  ownershiplLogger,\n  awsRedisLogger as redisLogger,\n  awsChipoloLogger as chipoloLogger,\n};\n\n"],"sourceRoot":"/opt/atlassian/pipelines/agent/build/src"}