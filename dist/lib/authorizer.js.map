{"version":3,"sources":["lib/authorizer.js"],"names":["_","require","debug","module","exports","settings","parser","cookieParser","secret","req","next","error","cookie","isEmpty","signedCookies","cookies","sessionId","query","session_id","_query","name","key","store","get","err","session","Error","message","passport","_key","userKey","userProperty","deserializeUser","user"],"mappings":";;AAAA,IAAIA,IAAIC,QAAQ,QAAR,CAAR;AACA,IAAIC,QAAQD,QAAQ,OAAR,EAAiB,8BAAjB,CAAZ;;AAEAE,OAAOC,OAAP,GAAiB,UAAUC,QAAV,EAAoB;AACpC,KAAIC,SAASD,SAASE,YAAT,CAAsBF,SAASG,MAA/B,CAAb;;AAEA,QAAO,UAAUC,GAAV,EAAeC,IAAf,EAAqB;AAC3BJ,SAAOG,GAAP,EAAY,EAAZ,EAAgB,UAAUE,KAAV,EAAiB;AAChCT,SAAM,iBAAN,EAAyBS,KAAzB;;AAEA,OAAIA,KAAJ,EAAW;AACV,WAAOD,KAAKC,KAAL,CAAP;AACA;;AAED,OAAIC,SAAS,CAACZ,EAAEa,OAAF,CAAUJ,IAAIK,aAAd,CAAD,GAAgCL,IAAIK,aAApC,GAAoDL,IAAIM,OAArE;AACA,OAAIC,YAAaP,IAAIQ,KAAJ,IAAaR,IAAIQ,KAAJ,CAAUC,UAAxB,IACdT,IAAIU,MAAJ,IAAcV,IAAIU,MAAJ,CAAWD,UADX,IAEfN,OAAOP,SAASe,IAAT,IAAiBf,SAASgB,GAAjC,CAFe,IAE0B,EAF1C;;AAIAnB,SAAM,aAAN,EAAqBc,SAArB;;AAEAX,YAASiB,KAAT,CAAeC,GAAf,CAAmBP,SAAnB,EAA8B,UAAUQ,GAAV,EAAeC,OAAf,EAAwB;AACrDvB,UAAM,wBAAN,EAAgCsB,GAAhC,EAAqCC,OAArC;;AAEA,QAAID,GAAJ,EAAS;AACR,YAAOd,KAAK,IAAIgB,KAAJ,CAAU,8BAA8BF,IAAIG,OAA5C,CAAL,CAAP;AACA;;AAED,QAAI,CAACF,OAAL,EAAc;AACb,YAAOf,KAAK,IAAIgB,KAAJ,CAAU,kBAAV,CAAL,CAAP;AACA;;AAED,QAAI,CAACD,QAAQpB,SAASuB,QAAT,CAAkBC,IAA1B,CAAL,EAAsC;AACrC,YAAOnB,KAAK,IAAIgB,KAAJ,CAAU,8BAAV,CAAL,CAAP;AACA;;AAED,QAAII,UAAUL,QAAQpB,SAASuB,QAAT,CAAkBC,IAA1B,EAAgCxB,SAAS0B,YAAzC,CAAd;;AAEA,QAAI,OAAOD,OAAP,KAAmB,WAAvB,EAAoC;AACnC,YAAOpB,KAAK,IAAIgB,KAAJ,CAAU,gEAAV,CAAL,CAAP;AACA;;AAEDrB,aAASuB,QAAT,CAAkBI,eAAlB,CAAkCF,OAAlC,EAA2C,UAAUN,GAAV,EAAeS,IAAf,EAAqB;AAC/D,SAAIT,GAAJ,EAAS;AACR,aAAOd,KAAKc,GAAL,CAAP;AACA;;AAED,SAAI,CAACS,IAAL,EAAW;AACV,aAAOvB,KAAK,IAAIgB,KAAJ,CAAU,gBAAV,CAAL,CAAP;AACA;;AAEDjB,SAAIJ,SAAS0B,YAAb,IAA6BE,IAA7B;;AAEAvB,UAAK,IAAL,EAAWuB,IAAX;AACA,KAZD;AAaA,IAlCD;AAmCA,GAjDD;AAkDA,EAnDD;AAoDA,CAvDD","file":"authorizer.js","sourcesContent":["var _ = require('lodash');\nvar debug = require('debug')('feathers-passport:authorizer');\n\nmodule.exports = function (settings) {\n\tvar parser = settings.cookieParser(settings.secret);\n\n\treturn function (req, next) {\n\t\tparser(req, {}, function (error) {\n\t\t\tdebug('parser returned', error);\n\n\t\t\tif (error) {\n\t\t\t\treturn next(error);\n\t\t\t}\n\n\t\t\tvar cookie = !_.isEmpty(req.signedCookies) ? req.signedCookies : req.cookies;\n\t\t\tvar sessionId = (req.query && req.query.session_id) ||\n\t\t\t\t(req._query && req._query.session_id) ||\n\t\t\t\tcookie[settings.name || settings.key] || '';\n\n\t\t\tdebug('got session', sessionId);\n\n\t\t\tsettings.store.get(sessionId, function (err, session) {\n\t\t\t\tdebug('session store returned', err, session);\n\n\t\t\t\tif (err) {\n\t\t\t\t\treturn next(new Error('Error in session store:\\n' + err.message));\n\t\t\t\t}\n\n\t\t\t\tif (!session) {\n\t\t\t\t\treturn next(new Error('No session found'));\n\t\t\t\t}\n\n\t\t\t\tif (!session[settings.passport._key]) {\n\t\t\t\t\treturn next(new Error('Passport was not initialized'));\n\t\t\t\t}\n\n\t\t\t\tvar userKey = session[settings.passport._key][settings.userProperty];\n\n\t\t\t\tif (typeof userKey === 'undefined') {\n\t\t\t\t\treturn next(new Error('User not authorized through passport (user property not found)'));\n\t\t\t\t}\n\n\t\t\t\tsettings.passport.deserializeUser(userKey, function (err, user) {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\treturn next(err);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!user) {\n\t\t\t\t\t\treturn next(new Error('User not found'));\n\t\t\t\t\t}\n\n\t\t\t\t\treq[settings.userProperty] = user;\n\n\t\t\t\t\tnext(null, user);\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t};\n};\n"],"sourceRoot":"/opt/atlassian/pipelines/agent/build/src"}